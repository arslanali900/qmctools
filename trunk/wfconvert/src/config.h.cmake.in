// -*- c++  -*-
//
//QMCTools Configuration Header. Automatically Generated
//
//See the LICENSE file in the top-level directory for copyright notices
//
#ifndef QMCTOOLS_CONFIGURATION_H
#define QMCTOOLS_CONFIGURATION_H

#ifndef F77_FUNC
#define F77_FUNC(name,NAME) name ## _
#endif

//#ifndef F77_FUNC_
//#define F77_FUNC_(name,NAME) name ## __
//#endif

/* define PRINT_DEBUG */
#cmakedefine PRINT_DEBUG @PRINT_DEBUG@

#cmakedefine HAVE_COMMON @HAVE_COMMON@

/* Enable OpenMP parallelization. */
#cmakedefine ENABLE_OPENMP @ENABLE_OPENMP@

/* Define to 1 if you have the `hdf5' library (-lhdf5). */
#cmakedefine HAVE_LIBHDF5 @HAVE_LIBHDF5@

/* Define to 1 if you want to use parallel hdf5 for frequent output */
#cmakedefine ENABLE_PHDF5 @ENABLE_PHDF5@

/* Define to 1 if you have the `boost' library */
#cmakedefine HAVE_LIBBOOST @HAVE_LIBBOOST@

/* Define to 1 if you have the `sprng' library (-lsprng). */
#cmakedefine HAVE_LIBSPRNG @HAVE_LIBSPRNG@

/* Define to 1 if you have the `blitz' library */
#cmakedefine HAVE_LIBBLITZ @HAVE_LIBBLITZ@

/* Define to 1 if you have libxml2 */
#cmakedefine HAVE_LIBXML2 @HAVE_LIBXML2@

/* Define to 1 if you have fftw */
#cmakedefine HAVE_LIBFFTW @HAVE_LIBFFTW@

/* Define to 1 if you have libxml++ */
#cmakedefine HAVE_LIBXMLPP @HAVE_LIBXMLPP@

/* Define to 1 if you have gsl */
#cmakedefine HAVE_LIBGSL @HAVE_LIBGSL@

/* Define to 1 if you have MPI library */
#cmakedefine HAVE_MPI @HAVE_MPI@

/* Define to 1 if you have MPI library */
#cmakedefine USE_MPI @HAVE_MPI@

/* Define the base precision: float, double */
#cmakedefine APP_PRECISION @APP_PRECISION@

/* Define if sincos function exists */
#cmakedefine HAVE_SINCOS @HAVE_SINCOS@
#if !defined(HAVE_SINCOS)
#include <cmath>
template<typename T> 
inline void sincos(T a, T* restrict s, T*  restrict c)
{
  *s=std::sin(a);
  *c=std::cos(a);
}
#endif

/* Define if std::round function exists */
#cmakedefine HAVE_STD_ROUND @HAVE_STD_ROUND@

/* Define if floor function exists */
#cmakedefine HAVE_FLOOR @HAVE_FLOOR@

/* Define if einspline lib exists */
#cmakedefine HAVE_EINSPLINE @HAVE_EINSPLINE@

/* Define if external einspline is found */
#cmakedefine HAVE_EINSPLINE_EXT @HAVE_EINSPLINE_EXT@

#ifndef HAVE_EINSPLINE_EXT

/* Define if posix_memalign function exists */
#cmakedefine HAVE_POSIX_MEMALIGN @HAVE_POSIX_MEMALIGN@

/* Define if pow function exists */
#cmakedefine HAVE_POW @HAVE_POW@

/* Define if sqrt function exists */
#cmakedefine HAVE_SQRT @HAVE_SQRT@

/* Define if dlfcn.h exists */
#cmakedefine HAVE_DLFCN_H @HAVE_DLFCN_H@

/* Define if inttypes.h exists */
#cmakedefine HAVE_INTTYPES_H @HAVE_INTTYPES_H@

/* Define if memory.h exists */
#cmakedefine HAVE_MEMORY_H @HAVE_MEMORY_H@

/* Define if pmmintrin.h exists */
#cmakedefine HAVE_PMMINTRIN_H @HAVE_PMMINTRIN_H@

/* Define if emmintrin.h exists */
#cmakedefine HAVE_EMMINTRIN_H @HAVE_EMMINTRIN_H@

/* Define if sys/stat.h exists */
#cmakedefine HAVE_SYS_STAT_H @HAVE_SYS_STAT_H@

/* Define if sys/time.h exists */
#cmakedefine HAVE_SYS_TIME_H @HAVE_SYS_TIME_H@

/* Define if sys/types.h exists */
#cmakedefine HAVE_SYS_TYPES_H @HAVE_SYS_TYPES_H@

/* Define if unistd.h exists */
#cmakedefine HAVE_UNISTD_H @HAVE_UNISTD_H@

/* Define if mmx support exists */
#cmakedefine HAVE_MMX @HAVE_MMX@

/* Define if sse support exists */
#cmakedefine HAVE_SSE @HAVE_SSE@

/* Define if sse2 support exists */
#cmakedefine HAVE_SSE2 @HAVE_SSE2@

/* Define if sse3 support exists */
#cmakedefine HAVE_SSE3 @HAVE_SSE3@

/* Define if ssse3 support exists */
#cmakedefine HAVE_SSSE3 @HAVE_SSSE3@

/* Define if c variable array support exists */
#cmakedefine HAVE_C_VARARRAYS @HAVE_C_VARARRAYS@

/* Prefetch loop lead distance  */
#cmakedefine PREFETCH_AHEAD @PREFETCH_AHEAD@

/* Use SSE prefetch  */
#cmakedefine USE_PREFETCH @USE_PREFETCH@

#endif /* HAVE_EINSPLINE_EXT */

/* Find mkl library */
#cmakedefine HAVE_MKL @HAVE_MKL@

/* Find mkl/vml library */
#cmakedefine HAVE_MKL_VML @HAVE_MKL_VML@

/* Find essl library */
#cmakedefine HAVE_ESSL @HAVE_ESSL@

/* Fund acml library */
#cmakedefine HAVE_ACML @HAVE_ACML@

/* Using CUDA for GPU execution */
#cmakedefine HAVE_CUDA @HAVE_CUDA@

/* Precision for CUDA kernels */
#cmakedefine CUDA_PRECISION @CUDA_PRECISION@

#endif // QMCTOOLS_CONFIGURATION_H

