elk-1.3.30
-removed factor of 2 from the BSE exchange term, this has little effect on
 spectra in the optical range; spotted by Markus Meinert after careful
 investigation of core-state BSE spectra
-M. Meinert also improved the 'CaO-BSE-core' and 'Fe-XMCD' examples
-fixed problem with symmetry discovered by Alexey Baranov
-calculation of the partial DOS is now parallel, thanks to suggestions from
 Anton Filanovich
-various optimisations; including some ideas from Anton Kozhevnikov
-iterative diagonalisation is now much faster
-improved the adaptive mixing scheme
-improved the initial stability of the self-consistent loop, thanks to
 discussions with Lars Nordstrom
Notes for developers
-inverse indices from 'idxis', 'idxia', 'idxil' and 'idxim' for species, atoms
 and angular momenta are now available, thanks to A. Kozhevnikov
-the arguments to hmlaa, hmlalo, hmllolo, olpaa, olpalo, olplolo have changed

elk-1.3.22
-fixed a problem which occurs with version 10 of the Intel compiler
-simplified the 'setup' script and added OpenMP compiler options by default
-no other changes

elk-1.3.20
-added directionality to the TDDFT code; thanks also to Vladimir Nazarov for
 discussions
-a pre-print is now available for the new TDDFT 'bootstrap' kernel:
 arXiv:1107.0199v1 [cond-mat.mtrl-sci]
-added the scissor correction to the RPA inverse dielectric function in
 EPSINV_RPA.OUT
-fixed a problem with running geometry optimisation with MPI; thanks to Arkady
 Davydov and Antonio Sanna for discussions
-geometry optmimisation has changed: now the geometry, interatomic distances,
 final total energies and forces are stored for each optimisation step in
 GEOMETRY_OPT.OUT, IADIST_OPT.OUT, TOTENERGY_OPT.OUT and FORCES_OPT.OUT
-removed geometry optmisation from the ground-state calculation and put it in a
 separate subroutine
-reduced pseudocharge density constant (lnpsd) because the spherical bessel
 function order could be too large; may change total energies slightly
-q-points and weights written to QPOINTS.OUT
-minor changes and optimisations

elk-1.3.15
-fixed serious bug introduced in the last version affecting some tasks (for
 example DOS plots) for crystals with non-symorphic symmetries; thanks to
 Vladimir Nazarov and Daniel Rohr for pointing this out
-VM also fixed the graphene example, in which the atomic coordinates were
 (embarrassingly) incorrect; also included a high-precision DOS plot to
 demonstrate the Dirac-like band structure
-SS, JKD, Antonio Sanna and Hardy Gross added a new TDDFT functional, called the
 'bootstrap' kernel, which produces remarkably good linear optical response
 functions (article currently in preparation); see the example 'LiF-TDDFT'
-Antonio Sanna added the Eliashberg equations for finding the superconducting
 gap as a function of temperature; see the example 'Al-Eliashberg'
-improved the electron-phonon coupling calculation (task=240); this is faster,
 more accurate and now works for spin-spirals; now also parallelised with MPI
-removed packed matrix format everwhere in the code, along with the variable
 'tpmat'; the first-variational matrices are now stored in upper triangular
 format; this takes more memory, but is faster
-Anton Kozhevnikov fixed a small problem with calculating the nuclear-nuclear
 energy
-various optimisations, simplifications and minor bug fixes
-this version of the code with be used in the CECAM Tutorial
Notes for developers
-the order of indeices for the q- and w-dependent inverse dielectric function,
 epsinv, have changed from (w,G,G') to (G,G',w)

elk-1.3.2
-linear response time-dependent density functional theory (TDDFT) now available
 for calculating the q->0 dielectric response; see the example 'LiF-TDDFT'
 (experimental)
-fixed a problem with the BSE calculation which made the response function too
 large
-added the possibility of using arbitrary states in the BSE kernel thanks to
 discussions with Markus Meinert; this enables the calulation of core state BSE
 spectra; see the example 'CaO-BSE-core' (experimental)
-MM also added an X-ray magnetic circular dichroism (XMCD) example: 'Fe-XMCD'
-BSE calculations are now faster, thanks to discussions with MM
-Alexey Baranov made several changes to the structure factor code, including
 adding an energy window, 'wsfac', for the calculations; see the example
 'MnO-str-factors'
-Tyrel McQueen suggested a way to speed up the Hartree-Fock calculation; this
 has been implemented and also considerably speeds up OEP and RDMFT
-TMcQ also made some ongoing changes to the hybrid functional code
-made the radial Dirac and Schrodinger integrators yet more stable; thanks to AB
 and Frank Wagner for discussions
-fixed a problem with the ordinary RPA dielectric function; only affects
 calculations which have a scissor shift which made epsilon slightly too small
-real symmetric diagonalisation now used for the first-variational eigenvalue
 problem for crystals with inversion symmetry; this can speed up the calculation
 by a factor of three; this is thanks to discussions with Lars Nordstrom;
 Important: the atomic basis may be shifted to a different position and old
 output files may need to be reconverged
-fixed a stability problem which occurs when using GGA functionals by removing
 G-vector truncation of the effective potential introduced in version 1.0.16;
 thanks to Greg Walker for discovering this
-LDA+U calculations are now faster thanks to fast evaluation of the atomic
 density matrix
-Broyden mixing scheme now available: this seems to be both fast and stable
 (use 'mixtype=3')
-removed Anderson mixing
-improved starting guess for the density in ground-state calculations
-upgraded to LAPACK 3.3.1
-various optimisations and simplifications
Notes for developers
-the arrays haa, halo, hlolo, oalo, ololo are now smaller and the indexing has
 been rearranged

elk-1.2.20
-the Bethe-Salpeter equation (BSE) for linear optics now works beyond the
 Tamm-Dankoff approximation
-RPA and BSE calculations now use full wavefunctions instead of plane waves
-removed the Coulomb regulator from the calculation of RPA dielectric function,
 instead used the analytic results for the head and the wings of the matrix
 (thanks to Vladimir Nazarov for discussions)
-improved the stability of radial Dirac and Schrodinger integrators (thanks to
 Alexei Baranov, Frank Wagner and Ondrej Certik for discussions)
-added more block descriptions to the manual (thanks to various people for
 pointing out omissions)
-various optimisations

elk-1.2.15
-SS and JKD added the Bethe-Salpeter equation (BSE) for linear optics
 calculations. This feature works with LDA+U, magnetism and spin-orbit coupling.
 It is also parallelised with MPI and can be run across a cluster. See the
 'LiF-BSE' and 'Si-BSE' examples. Currently an experimental feature
-Alexey Baranov added density and magnetic structure factors: see the
 'MnO-str-factors' example
-AB also fixed a problem with output of the spacegroup code
-full frequency and G vector dependent RPA inverse dielectric function now
 available with 'task=180'. Works with metals, insulators, magnetism and SOC,
 and can be calculated for arbitrary complex frequencies. Also parallelised with
 OpenMP and MPI. Thanks to Anton Kozhevnikov for discussions
-added lots more MPI parallelism and made the code more MPI-friendly
-many optimisations across the whole code
-Simone Chiesa, Anton Kozhevnikov and Adolfo Eguiluz found a problem in the
 plotting of the partial DOS which has now been fixed
-the first-variational eigenvalue matrices can now be stored and diagonalised in
 non-packed storage mode: use 'tpmat=.false.'. This can speed up calculations at
 the expense of memory
-Tyrel McQueen found a bug in the 'findprim' routine, now fixed
-TMcQ also suggested a change to how the code connects the points of the
 'plot1d' vertices
-Martin Stankovski suggested that 'ecvcut' be made into an input variable,
 allowing the core-valence cut-off to be adjusted
-added the phonon calculation of Ni to the examples
-Jerzy Goraus contributed a script for calculating VB-XPS spectra from PDOS*
 files; and also one for converting the Wien2K struct file to spacegroup.in
-modified some species files thanks to tests done by J. Goraus
-Henning Glawe suggested including the version number in the release directory
-upgraded to LAPACK 3.3.0
-made tolerance for finding the linearisation energies (epsband) much smaller:
 this improves the overall stability of the self-consistent loop
Notes for developers
-arguments to 'genppts' have changed; also the non-reduced k-points are now
 stored in the remaining part of the reduced k-point arrays

elk-1.1.4
-message passing interface (MPI) parallel runs now available; scalable to
 hundreds of cores across a cluster; can also be used as hybrid OpenMP+MPI
 parallelism for maximum efficiency; with thanks to Bhagawan Sahu for help
 with testing; see manual for compilation and running instructions
-S. Sharma added susceptibility tensor for non-linear optical second-harmonic
 generation (SHG); see example 'GaAs-NLO' for details
-added spin-orbit correction to momentum matrix elements; affects linear and
 non-linear optics
-optical calculations now work in combination with spin-spirals
-updated interface to version 1.0 of the ETSF exchange-correlation library,
 libxc; thanks to M. Marques and T. McQueen for assistance
-fixed bug spotted by T. McQueen involving using multiple tasks in conjunction
 with 'primcell=.true.'
-A. Kozhevnikov fixed bug in 'xc_pwca.f90'
-A. Kozhevnikov also fixed serious bug in 'getevecfv.f90'
-F. Cricchio changed the order of lattice vector angles in 'spacegroup' utility
 to 'bc, ac, ab' which corresponds to the convention alpha, beta, gamma
-removed scissor correction from eigenvalue solver; now it is used, as before,
 only in optics calculations
-T. McQueen suggested an improvement to the routine which generates the path in
 reciprocal space for bandstructure plots, 'connect.f90', which has been
 implemented
-fixed problem with XCrysDen Fermi surface plots, spotted by FC
-various optimisations and simplifications
Notes for developers
-arguments to 'zpotcoul' have changed in anticipation of linear-response
 phonons; should now be called in conjunction with 'genzvclmt'

elk-1.0.17
-fixed problem with Fermi surface generation introduced in the last version
-E. K. U. Gross added to list of main developers
-no other changes

elk-1.0.16
-fixed problem in linear optics calculations for metals - thanks to Antonio
 Sanna, Fabio Bernardini and Sandro Massida for pointing this out
-FC and LN added option for automatic determination of APW linearisation
 energies (use 'autolinengy=.true.')
-Marty Blaber made a script which allows for semi-automatic labeling of the
 vertex locations with gnuplot (found in the 'elk/utilities' directory)
-FC and LN fixed problem with some compilers when writing FERMISURF.OUT
-FC and LN fixed problem with writing XCrysDen Fermi surface plots
-Anton Kozhevnikov found and fixed a problem with the generation of the
 irreducible representation file 'ELMIREP.OUT'
-Torbjörn Björkman added a new routine which automatically determines the
 smearing width from the k-point density. See 'autoswidth' in the manual and
 the example 'Nb-autoswidth' for details
-added a constant electric field E in the form of a saw-tooth potential: set the
 vector 'efieldc' (experimental)
-added a constant vector potential A to the Hamiltonian to generate constant
 currents: set the variable 'afieldc' (experimental)
-FC and LN fixed problem with a spin-polarised GGA routine
-FC and LN pointed out that the energy term associated with the excess charge
 compensating background should be zero. This term has now been removed
-code now more memory efficient thanks to smarter array allocation
-the variable 'rgkmax' can now be made arbitrarily large without risk of
 instability
-removed variable 'cfdamp'
-Anton Kozhevnikov pointed out that the radial functions were being redundantly
 calculated for equivalent atoms -- now fixed
-Anton Filanovich added several questions to the FAQ
-scissors correction (given by the variable 'scissor') now applied consistently
 immediately after the generation of the eigenvalues
-FC and LN removed the spherical harmonic transform matrices with rank lmmaxapw
-added dielectric function calculation for arbitrary q-vector, see 'LiF-Yambo'
 example (experimental)
-by setting 'gmaxvr=0', the G-vector cut-off for the potential and density is
 automatically determined from 'gmaxvr=2*gkmax+epslat'
-various bug fixes, simplifications and optimisations

